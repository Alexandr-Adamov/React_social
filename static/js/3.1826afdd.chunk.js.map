{"version":3,"sources":["hoc/withAuthRedirect.js","components/content/Messages/Messages.module.css","components/content/Messages/Dialog/Dialog.module.css","components/content/Messages/Message/Message.module.css","components/content/Messages/Dialog/Dialog.jsx","components/content/Messages/Message/Message.jsx","components/content/Messages/Messages.jsx","components/content/Messages/MessagesContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","PureComponent","connect","module","exports","DialogItem","name","id","className","s","Message","message","maxLength300","maxLengthCreator","AddNewMessageForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","type","Messages","names","messages","dialogsItems","map","n","Dialog","key","messagesItems","m","dialogs","inputForm","values","addMessageActionCreator","messageText","compose","newMessageText","messagesPage"],"mappings":"2NAIMA,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,SAIRE,EAAmB,SAACC,GAAe,IACxCC,EADuC,uKAIzC,OAAsB,IADYC,KAAKC,MAA/BN,OAEC,kBAAC,IAAD,CAAUO,GAAG,WAEf,kBAACJ,EAAcE,KAAKC,WAPc,GACbE,iBAUhC,OADqBC,YAAQX,EAARW,CAAoCL,K,oBClB3DM,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,SAAW,6B,oBCAjGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,KAAO,uB,oBCAzFD,EAAOC,QAAU,CAAC,QAAU,2B,iJCWbC,EARI,SAACN,GAAW,IACrBO,EAAaP,EAAbO,KAAMC,EAAOR,EAAPQ,GACd,OACE,yBAAKC,UAAWC,IAAEH,MAChB,kBAAC,IAAD,CAASN,GAAE,oBAAeO,IAAOD,K,kBCIxBI,EATC,SAACX,GAAW,IAClBY,EAAYZ,EAAZY,QACR,OACE,yBAAKH,UAAWC,IAAEE,SACfA,I,gBCwBDC,EAAeC,YAAiB,IAWhCC,EAAoBC,YAAU,CAAEC,KAAM,mBAAlBD,EATJ,SAAChB,GAAW,IACxBkB,EAAiBlB,EAAjBkB,aACR,OACE,0BAAMC,SAAUD,GACd,kBAACE,EAAA,EAAD,CAAOC,UAAWC,IAAUf,KAAK,cAAcgB,YAAY,qBAAqBC,SAAU,CAACX,EAAcY,OACzG,4BAAQC,KAAK,UAAb,8DAMSC,EApCE,SAAC3B,GAChB,IAGQ4B,EAAoB5B,EAApB4B,MAAOC,EAAa7B,EAAb6B,SACTC,EAAeF,EAAMG,KAAI,SAACC,GAAD,OAAO,kBAACC,EAAD,CAAY1B,KAAMyB,EAAEzB,KAAM2B,IAAKF,EAAExB,GAAIA,GAAIwB,EAAExB,QAC3E2B,EAAgBN,EAASE,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASsB,IAAKE,EAAE5B,GAAIA,GAAI4B,EAAE5B,QACxF,OACE,yBAAKC,UAAWC,IAAE2B,SAChB,yBAAK5B,UAAWC,IAAEkB,OACfE,GAEH,yBAAKrB,UAAWC,IAAEmB,UACfM,GAEH,yBAAK1B,UAAWC,IAAE4B,WAChB,uHACA,kBAACvB,EAAD,CAAmBI,SAhBN,SAACoB,GAClBvC,EAAMwC,wBAAwBD,EAAOE,mB,SCG1BC,sBACbvC,aARsB,SAACV,GAAD,MAAY,CAClCkD,eAAgBlD,EAAMmD,aAAaD,eACnCf,MAAOnC,EAAMmD,aAAahB,MAC1BC,SAAUpC,EAAMmD,aAAaf,SAC7BnC,OAAQD,EAAME,KAAKD,UAIM,CAAE8C,8BAC3B5C,IAFa8C,CAGbf","file":"static/js/3.1826afdd.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends PureComponent {\n    render() {\n      const { isAuth: isAuthBoolean } = this.props;\n      if (isAuthBoolean === false) {\n        return <Redirect to=\"/login\" />;\n      }\n      return <Component {...this.props} />;\n    }\n  }\n  const withRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return withRedirect;\n};\n\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__1yN9B\",\"names\":\"Messages_names__2LsH1\",\"messages\":\"Messages_messages__2RdBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__owsd5\",\"names\":\"Dialog_names__8PftR\",\"name\":\"Dialog_name__hYJCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__D9Xd3\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Dialog.module.css';\n\nconst DialogItem = (props) => {\n  const { name, id } = props;\n  return (\n    <div className={s.name}>\n      <NavLink to={`/messages/${id}`}>{name}</NavLink>\n    </div>\n  );\n};\nexport default DialogItem;\n","import React from 'react';\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n  const { message } = props;\n  return (\n    <div className={s.message}>\n      {message}\n    </div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport s from './Messages.module.css';\nimport DialogItem from './Dialog/Dialog';\nimport Message from './Message/Message';\nimport { Textarea } from '../../Forms/FormsControls';\nimport { maxLengthCreator, required } from '../../../utils/validators/validator';\n\nconst Messages = (props) => {\n  const addMessage = (values) => {\n    props.addMessageActionCreator(values.messageText);\n  };\n  const { names, messages } = props;\n  const dialogsItems = names.map((n) => <DialogItem name={n.name} key={n.id} id={n.id} />);\n  const messagesItems = messages.map((m) => <Message message={m.message} key={m.id} id={m.id} />);\n  return (\n    <div className={s.dialogs}>\n      <div className={s.names}>\n        {dialogsItems}\n      </div>\n      <div className={s.messages}>\n        {messagesItems}\n      </div>\n      <div className={s.inputForm}>\n        <span>Новое сообщение</span>\n        <AddNewMessageForm onSubmit={addMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst maxLength300 = maxLengthCreator(50);\n\nconst addNewMessage = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field component={Textarea} name=\"messageText\" placeholder=\"Enter your message\" validate={[maxLength300, required]} />\n      <button type=\"submit\">Отправить</button>\n    </form>\n  );\n};\nconst AddNewMessageForm = reduxForm({ form: 'messageFormText' })(addNewMessage);\n\nexport default Messages;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addMessageActionCreator } from '../../../redux/messageReducer';\nimport Messages from './Messages';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\n\nconst mapStateToProps = (state) => ({\n  newMessageText: state.messagesPage.newMessageText,\n  names: state.messagesPage.names,\n  messages: state.messagesPage.messages,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { addMessageActionCreator }),\n  withAuthRedirect,\n)(Messages);\n"],"sourceRoot":""}